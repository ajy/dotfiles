#using C-a as prefix
unbind C-b
set-option -g prefix C-a
bind C-a send-prefix

#rename windows by what's running in them
set-option -g automatic-rename on

#Enable mouse mode
set-option -g -q mouse on

#count windows and panes from 1
set -g base-index 1
setw -g pane-base-index 1

# reload rc dynamically
# unbind r
# bind r source-file ~/.tmux.conf; display "Reloaded"

# get vi-like copy paste
setw -g mode-keys vi
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

#better pane splitting keymaps
unbind %
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"

#get to the previous window quickly
bind-key C-a last-window

#set-option -g default-command "reattach-to-user-namespace -l $SHELL"

# Smart pane switching with awareness of vim splits, requires vim-tmux-navigator
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

#Appearance-related

# Highlight active window
set-window-option -g window-status-current-bg white
set -g status-left "[#h:#S]"
set -g status-right "%a | %x | %R"
set -g status-bg green
set -g status-justify centre

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on
